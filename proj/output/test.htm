<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 791]: Last Updated: Sat Jun 01 17:36:02 2013
<BR><P>
<H3>Maximum Stack Usage =       2268 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; GDGUI_start &rArr; Home_page &rArr; Click_ico &rArr; Select_app &rArr; App_fmanager &rArr;  Home_page (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[97]">Scroll_ctrl</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
 <LI><a href="#[b6]">App_music</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
 <LI><a href="#[c2]">App_game2</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
 <LI><a href="#[88]">App_album</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
 <LI><a href="#[ae]">App_fmanager</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
 <LI><a href="#[a7]">App_ebook</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
 <LI><a href="#[a2]">App_camera</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e]">Home_page</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[59]">CRYP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from stm32f4xx_it.o(i.DCMI_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from cs4334.o(i.DMA1_Stream4_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream3_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from stm32f4xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5f]">Finish_album</a> from album.o(i.Finish_album) referenced from album.o(i.App_album)
 <LI><a href="#[60]">Finish_ebook</a> from ebook.o(i.Finish_ebook) referenced from ebook.o(i.App_ebook)
 <LI><a href="#[61]">Finish_fmanager</a> from fmanager.o(i.Finish_fmanager) referenced from fmanager.o(i.App_fmanager)
 <LI><a href="#[62]">Finish_game1</a> from game1.o(i.Finish_game1) referenced from game1.o(i.App_game1)
 <LI><a href="#[63]">Finish_game2</a> from game2.o(i.Finish_game2) referenced from game2.o(i.App_game2)
 <LI><a href="#[64]">Finish_music</a> from music.o(i.Finish_music) referenced from music.o(i.App_music)
 <LI><a href="#[5a]">HASH_RNG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from stm32f4xx_it.o(i.SDIO_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[5c]">main</a> from main.o(i.main) referenced from entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[202]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[65]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[75]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[203]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[204]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8.o(.ARM.Collect$$$$00000009))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[198]"></a>arm_cos_f32</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, arm_cos_f32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotation
</UL>

<P><STRONG><a name="[197]"></a>arm_sin_f32</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, arm_sin_f32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotation
</UL>

<P><STRONG><a name="[67]"></a>arm_cmplx_mag_q31</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, arm_cmplx_mag_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = arm_cmplx_mag_q31 &rArr; arm_sqrt_q31 &rArr; arm_recip_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sqrt_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_FFT
</UL>

<P><STRONG><a name="[69]"></a>arm_rfft_init_q31</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, arm_rfft_init_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = arm_rfft_init_q31 &rArr; arm_cfft_radix4_init_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix4_init_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_init
</UL>

<P><STRONG><a name="[6f]"></a>arm_split_rfft_q31</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, arm_rfft_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = arm_split_rfft_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_q31
</UL>

<P><STRONG><a name="[205]"></a>arm_split_rifft_q31</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, arm_rfft_q31.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>arm_rfft_q31</STRONG> (Thumb, 254 bytes, Stack size 56 bytes, arm_rfft_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = arm_rfft_q31 &rArr; arm_radix4_butterfly_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix4_butterfly_q31
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix4_butterfly_inverse_q31
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_bitreversal_q31
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_split_rfft_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_FFT
</UL>

<P><STRONG><a name="[68]"></a>arm_sqrt_q31</STRONG> (Thumb, 542 bytes, Stack size 24 bytes, arm_sqrt_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = arm_sqrt_q31 &rArr; arm_recip_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_recip_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cmplx_mag_q31
</UL>

<P><STRONG><a name="[6a]"></a>arm_cfft_radix4_init_q31</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, arm_cfft_radix4_init_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = arm_cfft_radix4_init_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_init_q31
</UL>

<P><STRONG><a name="[6e]"></a>arm_bitreversal_q31</STRONG> (Thumb, 184 bytes, Stack size 28 bytes, arm_cfft_radix4_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = arm_bitreversal_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_q31
</UL>

<P><STRONG><a name="[6c]"></a>arm_radix4_butterfly_q31</STRONG> (Thumb, 1072 bytes, Stack size 152 bytes, arm_cfft_radix4_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = arm_radix4_butterfly_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix4_q31
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_q31
</UL>

<P><STRONG><a name="[6d]"></a>arm_radix4_butterfly_inverse_q31</STRONG> (Thumb, 1084 bytes, Stack size 152 bytes, arm_cfft_radix4_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = arm_radix4_butterfly_inverse_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cfft_radix4_q31
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_q31
</UL>

<P><STRONG><a name="[71]"></a>arm_cfft_radix4_q31</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, arm_cfft_radix4_q31.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix4_butterfly_q31
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_radix4_butterfly_inverse_q31
</UL>

<P><STRONG><a name="[1e4]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadBytes
</UL>

<P><STRONG><a name="[206]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[208]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextByte
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
</UL>

<P><STRONG><a name="[1da]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLZW
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[20a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[87]"></a>strcat</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
</UL>

<P><STRONG><a name="[137]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
</UL>

<P><STRONG><a name="[171]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
</UL>

<P><STRONG><a name="[66]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[20b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>ADS_Read</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, touch.o(i.ADS_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_RWByte
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XY
</UL>

<P><STRONG><a name="[7b]"></a>ADS_SPI_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, spi.o(i.ADS_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADS_SPI_Init &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[7f]"></a>AUDIO_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, cs4334.o(i.AUDIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AUDIO_Init &rArr; Audio_I2S_Init &rArr; I2S_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_I2S_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
</UL>

<P><STRONG><a name="[83]"></a>AUDIO_TransferComplete</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, music.o(i.AUDIO_TransferComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = AUDIO_TransferComplete &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_MAL_Play
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
</UL>

<P><STRONG><a name="[86]"></a>Add_path</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, fsearch.o(i.Add_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Add_path
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>

<P><STRONG><a name="[88]"></a>App_album</STRONG> (Thumb, 1506 bytes, Stack size 48 bytes, album.o(i.App_album))
<BR><BR>[Stack]<UL><LI>Max Depth = 1036 + In Cycle
<LI>Call Chain = App_album &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_clear
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoomback
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoom_Mpic
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spic_slipback
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Spic
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotation
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mpic_rotaback
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Spic
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Mpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[a2]"></a>App_camera</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, camera.o(i.App_camera))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + In Cycle
<LI>Call Chain = App_camera &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV7670_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Start
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_camera
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[a7]"></a>App_ebook</STRONG> (Thumb, 572 bytes, Stack size 40 bytes, ebook.o(i.App_ebook))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + In Cycle
<LI>Call Chain = App_ebook &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HLine
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_paper
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_paper
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_ebook
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[ae]"></a>App_fmanager</STRONG> (Thumb, 744 bytes, Stack size 40 bytes, fmanager.o(i.App_fmanager))
<BR><BR>[Stack]<UL><LI>Max Depth = 1076 + In Cycle
<LI>Call Chain = App_fmanager &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_type
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cut_path
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_SFill
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_bground
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_Flist
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_path
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_file
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[ba]"></a>App_game1</STRONG> (Thumb, 518 bytes, Stack size 48 bytes, game1.o(i.App_game1))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = App_game1 &rArr; Scroll_ctrl &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_SPI_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_MMAval
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Circle
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_bground
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ball
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_game1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[c2]"></a>App_game2</STRONG> (Thumb, 560 bytes, Stack size 8 bytes, game2.o(i.App_game2))
<BR><BR>[Stack]<UL><LI>Max Depth = 948 + In Cycle
<LI>Call Chain = App_game2 &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Cmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_GPIO_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_I2S_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_clear
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Redraw_back
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_sound
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buf_back
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[b6]"></a>App_music</STRONG> (Thumb, 1200 bytes, Stack size 48 bytes, music.o(i.App_music))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + In Cycle
<LI>Call Chain = App_music &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_TransferComplete
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_SFill
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_bground
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_view
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_Mlist
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_music
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_init
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
</UL>

<P><STRONG><a name="[82]"></a>Audio_DMA_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, cs4334.o(i.Audio_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Audio_DMA_Init &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DMACmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
</UL>

<P><STRONG><a name="[81]"></a>Audio_I2S_Init</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, cs4334.o(i.Audio_I2S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Audio_I2S_Init &rArr; I2S_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[84]"></a>Audio_MAL_Play</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, cs4334.o(i.Audio_MAL_Play))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Audio_MAL_Play &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Cmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_TransferComplete
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
</UL>

<P><STRONG><a name="[c5]"></a>Buf_back</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, game2.o(i.Buf_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Buf_back &rArr; LCD_GetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[db]"></a>Buf_icon</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, gdgui.o(i.Buf_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Buf_icon &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[dd]"></a>COM1Init</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, usart.o(i.COM1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = COM1Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>CSPin_init</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, spi.o(i.CSPin_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CSPin_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[e5]"></a>Cam_Init</STRONG> (Thumb, 436 bytes, Stack size 120 bytes, ov7670.o(i.Cam_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Cam_Init &rArr; CSPin_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_MCO2Config
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB2PeriphClockCmd
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_ITConfig
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_DeInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_NVIC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV7670_Init
</UL>

<P><STRONG><a name="[a6]"></a>Cam_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ov7670.o(i.Cam_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Cam_Start &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_Cmd
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_CaptureCmd
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
</UL>

<P><STRONG><a name="[f0]"></a>Ch_BTcolor</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, gdgui.o(i.Ch_BTcolor))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Ch_BTcolor &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[f2]"></a>Change_bkpoint</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gdgui.o(i.Change_bkpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Change_bkpoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_icon
</UL>

<P><STRONG><a name="[f3]"></a>Change_buf</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, ebook.o(i.Change_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = Change_buf &rArr; Fill_paper &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_paper
</UL>

<P><STRONG><a name="[c1]"></a>Check_hole</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, game1.o(i.Check_hole))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Check_hole &rArr; Dialog_box &rArr; Draw_RRect &rArr; Spec_WINLine &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_SPI_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ball
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
</UL>

<P><STRONG><a name="[f4]"></a>Click_ico</STRONG> (Thumb, 394 bytes, Stack size 24 bytes, gdgui.o(i.Click_ico))
<BR><BR>[Stack]<UL><LI>Max Depth = 1108<LI>Call Chain = Click_ico &rArr; Select_app &rArr; App_fmanager &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_back
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICO_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[155]"></a>Color_M565</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_gif.o(i.Color_M565))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[90]"></a>Convert_pic</STRONG> (Thumb, 262 bytes, Stack size 584 bytes, album.o(i.Convert_pic))
<BR><BR>[Stack]<UL><LI>Max Depth = 948<LI>Call Chain = Convert_pic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[100]"></a>Copy_ico</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, gdgui.o(i.Copy_ico))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Copy_ico &rArr; Move_ICO &rArr; Read_Y &rArr; Read_XY &rArr; ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[b3]"></a>Cut_path</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsearch.o(i.Cut_path))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
</UL>

<P><STRONG><a name="[ef]"></a>DCMI_CaptureCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_CaptureCmd))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Start
</UL>

<P><STRONG><a name="[104]"></a>DCMI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>

<P><STRONG><a name="[ee]"></a>DCMI_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Start
</UL>

<P><STRONG><a name="[e8]"></a>DCMI_DeInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[102]"></a>DCMI_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DCMI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = DCMI_IRQHandler &rArr; Prt_Screen &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDTog
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_GetITStatus
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_Cmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_ClearITPendingBit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_CaptureCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>DCMI_ITConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[e9]"></a>DCMI_Init</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f4xx_dcmi.o(i.DCMI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DCMI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[ea]"></a>DCMI_NVIC_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ov7670.o(i.DCMI_NVIC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCMI_NVIC_Config &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, cs4334.o(i.DMA1_Stream4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = DMA1_Stream4_IRQHandler &rArr; AUDIO_TransferComplete &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetCmdStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_TransferComplete
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream3_IRQHandler))
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[10a]"></a>DMA_ClearFlag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessDMAIRQ
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
</UL>

<P><STRONG><a name="[d2]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_MAL_Play
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Start
</UL>

<P><STRONG><a name="[d3]"></a>DMA_DeInit</STRONG> (Thumb, 270 bytes, Stack size 28 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[1ac]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_FlowControllerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
</UL>

<P><STRONG><a name="[109]"></a>DMA_GetCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_GetCmdStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>

<P><STRONG><a name="[108]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>

<P><STRONG><a name="[d5]"></a>DMA_ITConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
</UL>

<P><STRONG><a name="[d4]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_MAL_Play
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>Del_Dialog</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gdgui.o(i.Del_Dialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Del_Dialog &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WinPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_patterns
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mp3play
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_init
</UL>

<P><STRONG><a name="[8b]"></a>Dialog_box</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, gdgui.o(i.Dialog_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Dialog_box &rArr; Draw_RRect &rArr; Spec_WINLine &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Char
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Hanzi
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FontAdr
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_RRect
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_patterns
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mp3play
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_init
</UL>

<P><STRONG><a name="[112]"></a>Dip_guibuf</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gdgui.o(i.Dip_guibuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Dip_guibuf &rArr; LCD_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
</UL>

<P><STRONG><a name="[114]"></a>Draw_BGDline</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, gdgui.o(i.Draw_BGDline))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Draw_BGDline &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_back
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_bground
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_path
</UL>

<P><STRONG><a name="[115]"></a>Draw_Bigpiont</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, lcd.o(i.Draw_Bigpiont))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Draw_Bigpiont &rArr; LCD_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_file
</UL>

<P><STRONG><a name="[116]"></a>Draw_Lpic</STRONG> (Thumb, 162 bytes, Stack size 576 bytes, album.o(i.Draw_Lpic))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = Draw_Lpic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoomback
</UL>

<P><STRONG><a name="[94]"></a>Draw_Mpic</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, album.o(i.Draw_Mpic))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Draw_Mpic &rArr; LCD_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[10d]"></a>Draw_RRect</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, gdgui.o(i.Draw_RRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Draw_RRect &rArr; Spec_WINLine &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spec_WINLine
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
</UL>

<P><STRONG><a name="[9b]"></a>Draw_Spic</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, album.o(i.Draw_Spic))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Draw_Spic &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Spic
</UL>

<P><STRONG><a name="[c3]"></a>Draw_bmp</STRONG> (Thumb, 204 bytes, Stack size 576 bytes, gdgui.o(i.Draw_bmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = Draw_bmp &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[118]"></a>Draw_buff</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gdgui.o(i.Draw_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Draw_buff &rArr; Set_bkpoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_bkpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ball
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[11a]"></a>Draw_busy</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, gdgui.o(i.Draw_busy))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Draw_busy &rArr; Trans_WINCircle &rArr; Trans_WINLine &rArr; Trans_WinPoint2 &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WINCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
</UL>

<P><STRONG><a name="[11c]"></a>Draw_column</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, music.o(i.Draw_column))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Draw_column &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
</UL>

<P><STRONG><a name="[11e]"></a>Draw_icon</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gdgui.o(i.Draw_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Draw_icon &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_bkpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_eico
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[11f]"></a>Draw_lock</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, gdgui.o(i.Draw_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Draw_lock &rArr; WIN_TCircle &rArr; Win_HTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_TCircle
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCK_Slipback
</UL>

<P><STRONG><a name="[122]"></a>Draw_menbuf</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, gdgui.o(i.Draw_menbuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Draw_menbuf &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[123]"></a>Draw_mono</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, gdgui.o(i.Draw_mono))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Draw_mono &rArr; TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
</UL>

<P><STRONG><a name="[125]"></a>Draw_pagepointer</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, gdgui.o(i.Draw_pagepointer))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Draw_pagepointer &rArr; Fill_Circle &rArr; LCD_HLine &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Circle
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[126]"></a>Draw_pattern</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, game1.o(i.Draw_pattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Draw_pattern &rArr; TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransPoint
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ball
</UL>

<P><STRONG><a name="[127]"></a>Draw_prg</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, music.o(i.Draw_prg))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Draw_prg &rArr; Win_Fill &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_VTLine
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_HTLine
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
</UL>

<P><STRONG><a name="[91]"></a>Draw_scroll</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, gdgui.o(i.Draw_scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Draw_scroll &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_back
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_clear
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecallUI
</UL>

<P><STRONG><a name="[12b]"></a>Dyna_bground</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gdgui.o(i.Dyna_bground))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Dyna_bground &rArr; Dyna_clear &rArr; Draw_scroll &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_clear
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BGDline
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[89]"></a>Dyna_clear</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, gdgui.o(i.Dyna_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Dyna_clear &rArr; Draw_scroll &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_bground
</UL>

<P><STRONG><a name="[12c]"></a>EICO_slipback</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gdgui.o(i.EICO_slipback))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = EICO_slipback &rArr; Set_eico &rArr; Draw_icon &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_eico
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
</UL>

<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = EXTI15_10_IRQHandler &rArr; Prt_Screen &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOn
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDOff
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI9_5_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[131]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
</UL>

<P><STRONG><a name="[12e]"></a>EXTI_GetITStatus</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>EXTI_Init</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, stm32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Keyint
</UL>

<P><STRONG><a name="[c8]"></a>FFT_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, music.o(i.FFT_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = FFT_init &rArr; Dialog_box &rArr; Draw_RRect &rArr; Spec_WINLine &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_init_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
</UL>

<P><STRONG><a name="[b0]"></a>FLASH_SPI_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, spi.o(i.FLASH_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FLASH_SPI_Init &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[152]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConf
</UL>

<P><STRONG><a name="[151]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConf
</UL>

<P><STRONG><a name="[b1]"></a>File_list</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, fmanager.o(i.File_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = File_list &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_type
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_type
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_back
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_Flist
</UL>

<P><STRONG><a name="[8f]"></a>File_search</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, fsearch.o(i.File_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = File_search &rArr; f_opendir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_suff
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[be]"></a>Fill_Circle</STRONG> (Thumb, 196 bytes, Stack size 52 bytes, lcd.o(i.Fill_Circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Fill_Circle &rArr; LCD_HLine &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_pagepointer
</UL>

<P><STRONG><a name="[93]"></a>Fill_Mpic</STRONG> (Thumb, 170 bytes, Stack size 576 bytes, album.o(i.Fill_Mpic))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = Fill_Mpic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[99]"></a>Fill_Spic</STRONG> (Thumb, 54 bytes, Stack size 560 bytes, album.o(i.Fill_Spic))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = Fill_Spic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Spic
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[132]"></a>Fill_back</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, gdgui.o(i.Fill_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Fill_back &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
</UL>

<P><STRONG><a name="[138]"></a>Fill_buff</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gdgui.o(i.Fill_buff))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Fill_buff &rArr; Get_bkpoint &rArr; LCD_GetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_bkpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ball
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[aa]"></a>Fill_paper</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, ebook.o(i.Fill_paper))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = Fill_paper &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FontAdr
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_buf
</UL>

<P><STRONG><a name="[5f]"></a>Finish_album</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, album.o(i.Finish_album))
<BR>[Address Reference Count : 1]<UL><LI> album.o(i.App_album)
</UL>
<P><STRONG><a name="[a5]"></a>Finish_camera</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, camera.o(i.Finish_camera))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Finish_camera &rArr; f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
</UL>

<P><STRONG><a name="[60]"></a>Finish_ebook</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ebook.o(i.Finish_ebook))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Finish_ebook &rArr; f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ebook.o(i.App_ebook)
</UL>
<P><STRONG><a name="[61]"></a>Finish_fmanager</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, fmanager.o(i.Finish_fmanager))
<BR>[Address Reference Count : 1]<UL><LI> fmanager.o(i.App_fmanager)
</UL>
<P><STRONG><a name="[62]"></a>Finish_game1</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, game1.o(i.Finish_game1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Finish_game1 &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> game1.o(i.App_game1)
</UL>
<P><STRONG><a name="[63]"></a>Finish_game2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, game2.o(i.Finish_game2))
<BR>[Address Reference Count : 1]<UL><LI> game2.o(i.App_game2)
</UL>
<P><STRONG><a name="[64]"></a>Finish_music</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, music.o(i.Finish_music))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Finish_music &rArr; f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music.o(i.App_music)
</UL>
<P><STRONG><a name="[dc]"></a>FlashPageRead</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, at45db.o(i.FlashPageRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_RWByte
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitBusy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_param
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_bground
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_type
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lock
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_icon
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_bground
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICO_Select
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_back
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_mono
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_icon
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BGDline
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buf_icon
</UL>

<P><STRONG><a name="[141]"></a>FlashPageWrite</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, at45db.o(i.FlashPageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FlashPageWrite &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_RWByte
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitBusy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_param
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
</UL>

<P><STRONG><a name="[140]"></a>FlashWaitBusy</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, at45db.o(i.FlashWaitBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_RWByte
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
</UL>

<P><STRONG><a name="[142]"></a>GDGUI_start</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gdgui.o(i.GDGUI_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132<LI>Call Chain = GDGUI_start &rArr; Home_page &rArr; Click_ico &rArr; Select_app &rArr; App_fmanager &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_patterns
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_mono
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_busy
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e0]"></a>GPIO_Init</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LineConf
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_SID_OUT
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_SID_IN
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[df]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_GPIO_Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LineConf
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[77]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Read
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitBusy
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Read
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitBusy
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read
</UL>

<P><STRONG><a name="[10f]"></a>Get_FontAdr</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gdgui.o(i.Get_FontAdr))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
</UL>

<P><STRONG><a name="[105]"></a>Get_Key</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, key.o(i.Get_Key))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
</UL>

<P><STRONG><a name="[bd]"></a>Get_MMAval</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mma7455.o(i.Get_MMAval))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Get_MMAval &rArr; MMA_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
</UL>

<P><STRONG><a name="[139]"></a>Get_bkpoint</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gdgui.o(i.Get_bkpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_bkpoint &rArr; LCD_GetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_buff
</UL>

<P><STRONG><a name="[136]"></a>Get_suff</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fsearch.o(i.Get_suff))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_type
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>

<P><STRONG><a name="[b5]"></a>Get_type</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, fsearch.o(i.Get_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Get_type
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_suff
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>Home_page</STRONG> (Thumb, 358 bytes, Stack size 8 bytes, gdgui.o(i.Home_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 1116<LI>Call Chain = Home_page &rArr; Click_ico &rArr; Select_app &rArr; App_fmanager &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_bground
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_pagepointer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Copy_ico
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ch_BTcolor
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
</UL>

<P><STRONG><a name="[c4]"></a>I2S_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.I2S_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_MAL_Play
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[80]"></a>I2S_GPIO_Init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, cs4334.o(i.I2S_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2S_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[d9]"></a>I2S_Init</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, stm32f4xx_spi.o(i.I2S_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2S_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_I2S_Init
</UL>

<P><STRONG><a name="[f5]"></a>ICO_Select</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, gdgui.o(i.ICO_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ICO_Select &rArr; TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransPoint
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
</UL>

<P><STRONG><a name="[ca]"></a>Info_board</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, music.o(i.Info_board))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Info_board &rArr; Draw_prg &rArr; Win_Fill &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fill
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_back
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_time
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_prg
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
</UL>

<P><STRONG><a name="[14d]"></a>Key_Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, key.o(i.Key_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Key_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>LCD_Char</STRONG> (Thumb, 116 bytes, Stack size 36 bytes, lcd.o(i.LCD_Char))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_Char &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Num
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_paper
</UL>

<P><STRONG><a name="[a8]"></a>LCD_Charmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_Charmd))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_path
</UL>

<P><STRONG><a name="[145]"></a>LCD_Clear</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, lcd.o(i.LCD_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_Clear &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[ed]"></a>LCD_Cursor</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, lcd.o(i.LCD_Cursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_HLine
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bigpiont
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Start
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_bground
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_bground
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_clear
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BGDline
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoom_Mpic
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Mpic
</UL>

<P><STRONG><a name="[14e]"></a>LCD_Dispmd</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lcd.o(i.LCD_Dispmd))
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[14f]"></a>LCD_FSMCConf</STRONG> (Thumb, 106 bytes, Stack size 120 bytes, lcd.o(i.LCD_FSMCConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = LCD_FSMCConf &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[9a]"></a>LCD_Fill</STRONG> (Thumb, 72 bytes, Stack size 36 bytes, lcd.o(i.LCD_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_Fill &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_eico
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoom_Mpic
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecallUI
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[da]"></a>LCD_GetPoint</STRONG> (Thumb, 34 bytes, Stack size 4 bytes, lcd.o(i.LCD_GetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRAM
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransPoint
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_bkpoint
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_busy
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ch_BTcolor
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buf_back
</UL>

<P><STRONG><a name="[154]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_gif.o(i.LCD_GetpPalConvTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetpPalConvTable
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Color_M565
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
</UL>

<P><STRONG><a name="[ab]"></a>LCD_HLine</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd.o(i.LCD_HLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_HLine &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Circle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
</UL>

<P><STRONG><a name="[156]"></a>LCD_Init</STRONG> (Thumb, 2184 bytes, Stack size 40 bytes, lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = LCD_Init &rArr; LCD_FSMCConf &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadReg
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LineConf
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConf
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Dispmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[159]"></a>LCD_Line</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, lcd.o(i.LCD_Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_Line &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
</UL>

<P><STRONG><a name="[157]"></a>LCD_LineConf</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, lcd.o(i.LCD_LineConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_LineConf &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[15a]"></a>LCD_Num</STRONG> (Thumb, 116 bytes, Stack size 36 bytes, lcd.o(i.LCD_Num))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_Num &rArr; LCD_Char &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
</UL>

<P><STRONG><a name="[153]"></a>LCD_ReadRAM</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i.LCD_ReadRAM))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
</UL>

<P><STRONG><a name="[158]"></a>LCD_ReadReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(i.LCD_ReadReg))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[f1]"></a>LCD_SetPoint</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd.o(i.LCD_SetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransPoint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Line
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Char
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WinPoint2
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WinPoint
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Hanzi
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_bkpoint
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICO_Select
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_menbuf
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_busy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_bkpoint
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ch_BTcolor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_pattern
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Redraw_back
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotation
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Spic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
</UL>

<P><STRONG><a name="[113]"></a>LCD_Window</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, lcd.o(i.LCD_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_Window
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bigpiont
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_clear
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoom_Mpic
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Mpic
</UL>

<P><STRONG><a name="[ec]"></a>LCD_WriteReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd.o(i.LCD_WriteReg))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Dispmd
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Start
</UL>

<P><STRONG><a name="[15c]"></a>LCK_Slipback</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gdgui.o(i.LCK_Slipback))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = LCK_Slipback &rArr; Draw_lock &rArr; WIN_TCircle &rArr; Win_HTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
</UL>

<P><STRONG><a name="[130]"></a>LEDOff</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, led.o(i.LEDOff))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[12f]"></a>LEDOn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, led.o(i.LEDOn))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[103]"></a>LEDTog</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, led.o(i.LEDTog))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>

<P><STRONG><a name="[15d]"></a>LED_Init</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>Load_bground</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gdgui.o(i.Load_bground))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Load_bground &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
</UL>

<P><STRONG><a name="[15e]"></a>Load_icon</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, gdgui.o(i.Load_icon))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Load_icon &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SetPoint
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
</UL>

<P><STRONG><a name="[121]"></a>Load_lock</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gdgui.o(i.Load_lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Load_lock &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
</UL>

<P><STRONG><a name="[146]"></a>Load_lockpage</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gdgui.o(i.Load_lockpage))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Load_lockpage &rArr; LCK_Slipback &rArr; Draw_lock &rArr; WIN_TCircle &rArr; Win_HTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_bground
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCK_Slipback
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
</UL>

<P><STRONG><a name="[160]"></a>Load_param</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gdgui.o(i.Load_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Load_param &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[133]"></a>Load_type</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gdgui.o(i.Load_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Load_type &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
</UL>

<P><STRONG><a name="[161]"></a>MICO_slipback</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, gdgui.o(i.MICO_slipback))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = MICO_slipback &rArr; Set_mico &rArr; Load_icon &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
</UL>

<P><STRONG><a name="[bc]"></a>MMA_Init</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, mma7455.o(i.MMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MMA_Init &rArr; CSPin_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_SPI_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_MMA_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
</UL>

<P><STRONG><a name="[148]"></a>MMA_Read</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, mma7455.o(i.MMA_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MMA_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_RWByte
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_MMAval
</UL>

<P><STRONG><a name="[bf]"></a>MMA_SPI_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, spi.o(i.MMA_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MMA_SPI_Init &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
</UL>

<P><STRONG><a name="[147]"></a>MMA_Write</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, mma7455.o(i.MMA_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MMA_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_RWByte
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_MMA_Cal
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_MMAval
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[101]"></a>Move_ICO</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, gdgui.o(i.Move_ICO))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Move_ICO &rArr; Read_Y &rArr; Read_XY &rArr; ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_param
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_buff
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_menbuf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_icon
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_buff
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buf_icon
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Copy_ico
</UL>

<P><STRONG><a name="[9f]"></a>Move_Spic</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, album.o(i.Move_Spic))
<BR><BR>[Stack]<UL><LI>Max Depth = 980<LI>Call Chain = Move_Spic &rArr; Save_pic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_buff
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_menbuf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_icon
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_buff
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[b7]"></a>Move_file</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, fmanager.o(i.Move_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Move_file &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_type
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_type
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_buff
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_menbuf
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_buff
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
</UL>

<P><STRONG><a name="[166]"></a>Mp3play</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, music.o(i.Mp3play))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Mp3play &rArr; Dialog_box &rArr; Draw_RRect &rArr; Spec_WINLine &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>

<P><STRONG><a name="[a1]"></a>Mpic_rotaback</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, album.o(i.Mpic_rotaback))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Mpic_rotaback &rArr; Rotation &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rotation
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[ce]"></a>Musicplay</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, music.o(i.Musicplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = Musicplay &rArr; Wavplay &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_suff
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mp3play
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_prev
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_next
</UL>

<P><STRONG><a name="[168]"></a>MyRTC_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, rtc.o(i.MyRTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MyRTC_Init &rArr; RTC_TimeRegulate &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearFlag
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[170]"></a>My_FFT</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, music.o(i.My_FFT))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = My_FFT &rArr; arm_rfft_q31 &rArr; arm_radix4_butterfly_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_rfft_q31
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cmplx_mag_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
</UL>

<P><STRONG><a name="[98]"></a>My_chdir</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fsearch.o(i.My_chdir))
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_patterns
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[172]"></a>NVIC_Configuration</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, sdio_sd.o(i.NVIC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[d6]"></a>NVIC_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Keyint
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_NVIC_Config
</UL>

<P><STRONG><a name="[107]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_NVIC_Config
</UL>

<P><STRONG><a name="[a4]"></a>OV7670_Init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ov7670.o(i.OV7670_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = OV7670_Init &rArr; Cam_Init &rArr; CSPin_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_WriteReg
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
</UL>

<P><STRONG><a name="[174]"></a>OV_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ov7670.o(i.OV_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV7670_Init
</UL>

<P><STRONG><a name="[175]"></a>OV_WriteReg</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ov7670.o(i.OV_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = OV_WriteReg &rArr; SCCB_Write &rArr; SCCB_SID_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Write
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Stop
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV7670_Init
</UL>

<P><STRONG><a name="[179]"></a>PWM_Init</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, timer.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = PWM_Init &rArr; TIM3_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16d]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>Play_ctrl</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, music.o(i.Play_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = Play_ctrl &rArr; Play_prev &rArr; Musicplay &rArr; Wavplay &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_TransferComplete
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SFill
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_HTLine
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_type
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_back
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_prev
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_next
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
</UL>

<P><STRONG><a name="[182]"></a>Play_next</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, music.o(i.Play_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = Play_next &rArr; Musicplay &rArr; Wavplay &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
</UL>

<P><STRONG><a name="[181]"></a>Play_prev</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, music.o(i.Play_prev))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = Play_prev &rArr; Musicplay &rArr; Wavplay &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
</UL>

<P><STRONG><a name="[c6]"></a>Play_sound</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, game2.o(i.Play_sound))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Play_sound
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[c9]"></a>Play_view</STRONG> (Thumb, 678 bytes, Stack size 96 bytes, music.o(i.Play_view))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Play_view &rArr; My_FFT &rArr; arm_rfft_q31 &rArr; arm_radix4_butterfly_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Num
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_type
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_back
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_FFT
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_column
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_view
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_Mlist
</UL>

<P><STRONG><a name="[106]"></a>Prt_Screen</STRONG> (Thumb, 148 bytes, Stack size 584 bytes, gdgui.o(i.Prt_Screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 948<LI>Call Chain = Prt_Screen &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRAM
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHeader
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBMPInfo
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_IRQHandler
</UL>

<P><STRONG><a name="[d1]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_GPIO_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_LineConf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[e6]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[150]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMCConf
</UL>

<P><STRONG><a name="[d8]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_I2S_Init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[1ba]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[de]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Keyint
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
</UL>

<P><STRONG><a name="[19d]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
</UL>

<P><STRONG><a name="[1d0]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[187]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[186]"></a>RCC_LSEConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[e7]"></a>RCC_MCO2Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_MCO2Config))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cam_Init
</UL>

<P><STRONG><a name="[189]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[188]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[192]"></a>RTC_AlarmCmd</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_AlarmCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_AlarmCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[16f]"></a>RTC_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
</UL>

<P><STRONG><a name="[16a]"></a>RTC_Config</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, rtc.o(i.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_Config &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
</UL>

<P><STRONG><a name="[18c]"></a>RTC_EnterInitMode</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[18d]"></a>RTC_ExitInitMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[18a]"></a>RTC_GetTime</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
</UL>

<P><STRONG><a name="[193]"></a>RTC_ITConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RTC_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[16b]"></a>RTC_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
</UL>

<P><STRONG><a name="[169]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
</UL>

<P><STRONG><a name="[18e]"></a>RTC_SetAlarm</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_SetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[190]"></a>RTC_SetTime</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[16c]"></a>RTC_TimeRegulate</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, rtc.o(i.RTC_TimeRegulate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RTC_TimeRegulate &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_AlarmCmd
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
</UL>

<P><STRONG><a name="[194]"></a>RTC_TimeShow</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, rtc.o(i.RTC_TimeShow))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = RTC_TimeShow &rArr; LCD_Num &rArr; LCD_Char &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Num
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[16e]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[191]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeRegulate
</UL>

<P><STRONG><a name="[1d2]"></a>ReadUnit</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, music.o(i.ReadUnit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReadUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveParsing
</UL>

<P><STRONG><a name="[95]"></a>Read_X</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, touch.o(i.Read_X))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Read_X &rArr; Read_XY &rArr; ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_file
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[195]"></a>Read_XY</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, touch.o(i.Read_XY))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Read_XY &rArr; ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
</UL>

<P><STRONG><a name="[96]"></a>Read_Y</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, touch.o(i.Read_Y))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Read_Y &rArr; Read_XY &rArr; ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XY
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_file
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[196]"></a>RecallUI</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, album.o(i.RecallUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 980<LI>Call Chain = RecallUI &rArr; Set_Spic &rArr; Fill_Spic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoom_Mpic
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Spic
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoomback
</UL>

<P><STRONG><a name="[c7]"></a>Redraw_back</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, game2.o(i.Redraw_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Redraw_back &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
</UL>

<P><STRONG><a name="[9c]"></a>Rotation</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, album.o(i.Rotation))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Rotation &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sin_f32
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_cos_f32
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mpic_rotaback
</UL>

<P><STRONG><a name="[173]"></a>SCCB_Init</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ov7670.o(i.SCCB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SCCB_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV7670_Init
</UL>

<P><STRONG><a name="[199]"></a>SCCB_SID_IN</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ov7670.o(i.SCCB_SID_IN))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SCCB_SID_IN &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Write
</UL>

<P><STRONG><a name="[19a]"></a>SCCB_SID_OUT</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ov7670.o(i.SCCB_SID_OUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SCCB_SID_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Write
</UL>

<P><STRONG><a name="[176]"></a>SCCB_Start</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ov7670.o(i.SCCB_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SCCB_Start &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_WriteReg
</UL>

<P><STRONG><a name="[178]"></a>SCCB_Stop</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ov7670.o(i.SCCB_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SCCB_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_WriteReg
</UL>

<P><STRONG><a name="[177]"></a>SCCB_Write</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ov7670.o(i.SCCB_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = SCCB_Write &rArr; SCCB_SID_OUT &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_SID_OUT
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_SID_IN
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_WriteReg
</UL>

<P><STRONG><a name="[fa]"></a>SDIO_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[1b0]"></a>SDIO_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[1ae]"></a>SDIO_ClockCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[1b7]"></a>SDIO_DMACmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>

<P><STRONG><a name="[13c]"></a>SDIO_DataConfig</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DataConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_DataConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[19c]"></a>SDIO_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[fb]"></a>SDIO_GetCommandResponse</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetCommandResponse))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[13d]"></a>SDIO_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[1af]"></a>SDIO_GetITStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>

<P><STRONG><a name="[1aa]"></a>SDIO_GetPowerState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[fc]"></a>SDIO_GetResponse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_GetResponse))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>

<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SDIO_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SDIO_IRQHandler &rArr; SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1b1]"></a>SDIO_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ProcessIRQSrc
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>

<P><STRONG><a name="[1a0]"></a>SDIO_Init</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32f4xx_sdio.o(i.SDIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[13e]"></a>SDIO_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_ReadData))
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[13b]"></a>SDIO_SendCommand</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_sdio.o(i.SDIO_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDIO_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[1ad]"></a>SDIO_SetPowerState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_sdio.o(i.SDIO_SetPowerState))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
</UL>

<P><STRONG><a name="[19f]"></a>SD_EnableWideBusOperation</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, sdio_sd.o(i.SD_EnableWideBusOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1a8]"></a>SD_GetCardInfo</STRONG> (Thumb, 606 bytes, Stack size 28 bytes, sdio_sd.o(i.SD_GetCardInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SD_GetCardInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1a1]"></a>SD_GetState</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sdio_sd.o(i.SD_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>

<P><STRONG><a name="[1a3]"></a>SD_GetStatus</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sdio_sd.o(i.SD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_GetStatus &rArr; SD_GetState &rArr; SD_SendStatus &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[1a4]"></a>SD_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, sdio_sd.o(i.SD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DeInit
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetCardInfo
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[1a7]"></a>SD_InitializeCards</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, sdio_sd.o(i.SD_InitializeCards))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_InitializeCards &rArr; CmdResp6Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetPowerState
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp6Error
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp2Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1ab]"></a>SD_LowLevel_DMA_TxConfig</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, sdio_sd.o(i.SD_LowLevel_DMA_TxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_FlowControllerConfig
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
</UL>

<P><STRONG><a name="[1a5]"></a>SD_LowLevel_Init</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, sdio_sd.o(i.SD_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SD_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1a6]"></a>SD_PowerON</STRONG> (Thumb, 428 bytes, Stack size 40 bytes, sdio_sd.o(i.SD_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_PowerON &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SetPowerState
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClockCmd
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[10b]"></a>SD_ProcessDMAIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sdio_sd.o(i.SD_ProcessDMAIRQ))
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream3_IRQHandler
</UL>

<P><STRONG><a name="[19e]"></a>SD_ProcessIRQSrc</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, sdio_sd.o(i.SD_ProcessIRQSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SD_ProcessIRQSrc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetITStatus
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_IRQHandler
</UL>

<P><STRONG><a name="[1b2]"></a>SD_ReadBlock</STRONG> (Thumb, 308 bytes, Stack size 40 bytes, sdio_sd.o(i.SD_ReadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_ReadBlock &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[1b3]"></a>SD_ReadMultiBlocks</STRONG> (Thumb, 374 bytes, Stack size 40 bytes, sdio_sd.o(i.SD_ReadMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SD_ReadMultiBlocks &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[1a9]"></a>SD_SelectDeselect</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sdio_sd.o(i.SD_SelectDeselect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_SelectDeselect &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>

<P><STRONG><a name="[1a2]"></a>SD_SendStatus</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sdio_sd.o(i.SD_SendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SD_SendStatus &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetState
</UL>

<P><STRONG><a name="[1b4]"></a>SD_StopTransfer</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sdio_sd.o(i.SD_StopTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SD_StopTransfer &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
</UL>

<P><STRONG><a name="[1b5]"></a>SD_WaitWriteOperation</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, sdio_sd.o(i.SD_WaitWriteOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SD_WaitWriteOperation &rArr; SD_StopTransfer &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[1b6]"></a>SD_WriteBlock</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, sdio_sd.o(i.SD_WriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SD_WriteBlock &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[1b8]"></a>SD_WriteMultiBlocks</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, sdio_sd.o(i.SD_WriteMultiBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ITConfig
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DMACmd
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_LowLevel_DMA_TxConfig
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[162]"></a>SPI1_Init</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, spi.o(i.SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SPI1_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
</UL>

<P><STRONG><a name="[78]"></a>SPI1_RWByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, spi.o(i.SPI1_RWByte))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Write
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Read
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitBusy
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read
</UL>

<P><STRONG><a name="[7e]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_SPI_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
</UL>

<P><STRONG><a name="[1b9]"></a>SPI_Flash_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, at45db.o(i.SPI_Flash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SPI_Flash_Init &rArr; CSPin_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[110]"></a>SPI_Flash_Read</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, at45db.o(i.SPI_Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
</UL>

<P><STRONG><a name="[d7]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_DMA_Init
</UL>

<P><STRONG><a name="[7c]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_SPI_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_I2S_Init
</UL>

<P><STRONG><a name="[7d]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_SPI_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
</UL>

<P><STRONG><a name="[163]"></a>SPI_MMA_Cal</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mma7455.o(i.SPI_MMA_Cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_MMA_Cal &rArr; MMA_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMA_Init
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1bd]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Keyint
</UL>

<P><STRONG><a name="[1bb]"></a>Save_mono</STRONG> (Thumb, 112 bytes, Stack size 576 bytes, gdgui.o(i.Save_mono))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = Save_mono &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cut_path
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_patterns
</UL>

<P><STRONG><a name="[164]"></a>Save_param</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gdgui.o(i.Save_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Save_param &rArr; FlashPageWrite &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_ICO
</UL>

<P><STRONG><a name="[165]"></a>Save_pic</STRONG> (Thumb, 176 bytes, Stack size 576 bytes, gdgui.o(i.Save_pic))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = Save_pic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cut_path
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_path
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_patterns
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
</UL>

<P><STRONG><a name="[f8]"></a>Scroll_back</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gdgui.o(i.Scroll_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Scroll_back &rArr; Draw_scroll &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BGDline
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
</UL>

<P><STRONG><a name="[97]"></a>Scroll_ctrl</STRONG> (Thumb, 366 bytes, Stack size 40 bytes, gdgui.o(i.Scroll_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + In Cycle
<LI>Call Chain = Scroll_ctrl &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ch_BTcolor
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[f6]"></a>Select_app</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, gdgui.o(i.Select_app))
<BR><BR>[Stack]<UL><LI>Max Depth = 1084<LI>Call Chain = Select_app &rArr; App_fmanager &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
</UL>

<P><STRONG><a name="[b9]"></a>Select_file</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, fmanager.o(i.Select_file))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Select_file &rArr; Read_Y &rArr; Read_XY &rArr; ADS_Read &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bigpiont
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
</UL>

<P><STRONG><a name="[1bc]"></a>Set_Keyint</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, key.o(i.Set_Keyint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Set_Keyint &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>Set_Spic</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, album.o(i.Set_Spic))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = Set_Spic &rArr; Fill_Spic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Spic
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spic_slipback
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecallUI
</UL>

<P><STRONG><a name="[c0]"></a>Set_ball</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, game1.o(i.Set_ball))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Set_ball &rArr; Draw_pattern &rArr; TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_buff
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_buff
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_pattern
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
</UL>

<P><STRONG><a name="[119]"></a>Set_bkpoint</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gdgui.o(i.Set_bkpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Set_bkpoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_buff
</UL>

<P><STRONG><a name="[12d]"></a>Set_eico</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, gdgui.o(i.Set_eico))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Set_eico &rArr; Draw_icon &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_icon
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EICO_slipback
</UL>

<P><STRONG><a name="[f7]"></a>Set_mico</STRONG> (Thumb, 386 bytes, Stack size 56 bytes, gdgui.o(i.Set_mico))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Set_mico &rArr; Load_icon &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_icon
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_back
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dip_guibuf
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_mico
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MICO_slipback
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Click_ico
</UL>

<P><STRONG><a name="[149]"></a>Set_scroll</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, gdgui.o(i.Set_scroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Set_scroll &rArr; Set_eico &rArr; Draw_icon &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Y
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_eico
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_back
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_scroll
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BGDline
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[1c0]"></a>ShowGif</STRONG> (Thumb, 82 bytes, Stack size 64 bytes, gui_gif.o(i.ShowGif))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = ShowGif &rArr; _DrawGIFImage &rArr; _DispGIFImage &rArr; _GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bf]"></a>Show_Fonts</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gdgui.o(i.Show_Fonts))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Show_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Char
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Hanzi
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FontAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_eico
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_scroll
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_path
</UL>

<P><STRONG><a name="[111]"></a>Show_Hanzi</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gdgui.o(i.Show_Hanzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Show_Hanzi &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Vfonts
</UL>

<P><STRONG><a name="[1c4]"></a>Show_Vfonts</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, ebook.o(i.Show_Vfonts))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Show_Vfonts &rArr; Show_Hanzi &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Hanzi
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_paper
</UL>

<P><STRONG><a name="[b2]"></a>Show_path</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, fmanager.o(i.Show_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Show_path &rArr; Show_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_BGDline
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
</UL>

<P><STRONG><a name="[14c]"></a>Show_time</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, music.o(i.Show_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Show_time &rArr; Win_Num &rArr; Win_Char &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Num
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
</UL>

<P><STRONG><a name="[14b]"></a>Slip_eico</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gdgui.o(i.Slip_eico))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Slip_eico &rArr; EICO_slipback &rArr; Set_eico &rArr; Draw_icon &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Fonts
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_eico
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EICO_slipback
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[14a]"></a>Slip_mico</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, gdgui.o(i.Slip_mico))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Slip_mico &rArr; MICO_slipback &rArr; Set_mico &rArr; Load_icon &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SPI_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_X
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_mico
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MICO_slipback
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_pagepointer
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
</UL>

<P><STRONG><a name="[ac]"></a>Slip_paper</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ebook.o(i.Slip_paper))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Slip_paper &rArr; Show_Vfonts &rArr; Show_Hanzi &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Char
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_Vfonts
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stick_paper
</UL>

<P><STRONG><a name="[117]"></a>Spec_WINLine</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gdgui.o(i.Spec_WINLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Spec_WINLine &rArr; Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WinPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_RRect
</UL>

<P><STRONG><a name="[a0]"></a>Spic_slipback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, album.o(i.Spic_slipback))
<BR><BR>[Stack]<UL><LI>Max Depth = 972<LI>Call Chain = Spic_slipback &rArr; Set_Spic &rArr; Fill_Spic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Spic
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[b8]"></a>Stick_Flist</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, fmanager.o(i.Stick_Flist))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Stick_Flist &rArr; File_list &rArr; Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
</UL>

<P><STRONG><a name="[d0]"></a>Stick_Mlist</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, music.o(i.Stick_Mlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Stick_Mlist &rArr; Play_view &rArr; My_FFT &rArr; arm_rfft_q31 &rArr; arm_radix4_butterfly_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
</UL>

<P><STRONG><a name="[ad]"></a>Stick_paper</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, ebook.o(i.Stick_paper))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = Stick_paper &rArr; Change_buf &rArr; Fill_paper &rArr; f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_paper
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
</UL>

<P><STRONG><a name="[cf]"></a>Stick_view</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, music.o(i.Stick_view))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Stick_view &rArr; Play_view &rArr; My_FFT &rArr; arm_rfft_q31 &rArr; arm_radix4_butterfly_q31
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TIM2_IRQHandler &rArr; RTC_TimeShow &rArr; LCD_Num &rArr; LCD_Char &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TimeShow
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDTog
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1c9]"></a>TIM2_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, timer.o(i.TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM2_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17a]"></a>TIM3_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timer.o(i.TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM3_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[17e]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[1c8]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[17f]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[1c7]"></a>TIM_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[1cb]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
</UL>

<P><STRONG><a name="[17c]"></a>TIM_OC2Init</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[17d]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[1ca]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_PrescalerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
</UL>

<P><STRONG><a name="[17b]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
</UL>

<P><STRONG><a name="[1cc]"></a>Touch_Init</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, touch.o(i.Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Touch_Init &rArr; CSPin_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSPin_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[124]"></a>TransPoint</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, lcd.o(i.TransPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_HLine
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICO_Select
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_mono
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_pattern
</UL>

<P><STRONG><a name="[1cd]"></a>Trans_HLine</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gdgui.o(i.Trans_HLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Trans_HLine &rArr; TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TransPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_SFill
</UL>

<P><STRONG><a name="[b4]"></a>Trans_SFill</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, gdgui.o(i.Trans_SFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Trans_SFill &rArr; Trans_HLine &rArr; TransPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_HLine
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
</UL>

<P><STRONG><a name="[11b]"></a>Trans_WINCircle</STRONG> (Thumb, 234 bytes, Stack size 64 bytes, gdgui.o(i.Trans_WINCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Trans_WINCircle &rArr; Trans_WINLine &rArr; Trans_WinPoint2 &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WINLine
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_busy
</UL>

<P><STRONG><a name="[1ce]"></a>Trans_WINLine</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gdgui.o(i.Trans_WINLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Trans_WINLine &rArr; Trans_WinPoint2 &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WinPoint2
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WINCircle
</UL>

<P><STRONG><a name="[10c]"></a>Trans_WinPoint</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gdgui.o(i.Trans_WinPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Trans_WinPoint &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spec_WINLine
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
</UL>

<P><STRONG><a name="[1cf]"></a>Trans_WinPoint2</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gdgui.o(i.Trans_WinPoint2))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Trans_WinPoint2 &rArr; LCD_SetPoint &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trans_WINLine
</UL>

<P><STRONG><a name="[bb]"></a>Trans_bground</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, gdgui.o(i.Trans_bground))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Trans_bground &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageRead
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lockpage
</UL>

<P><STRONG><a name="[e3]"></a>USART_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
</UL>

<P><STRONG><a name="[e2]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
</UL>

<P><STRONG><a name="[e1]"></a>USART_Init</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
</UL>

<P><STRONG><a name="[144]"></a>UpdateFont</STRONG> (Thumb, 108 bytes, Stack size 576 bytes, gdgui.o(i.UpdateFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 940<LI>Call Chain = UpdateFont &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageWrite
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Num
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Charmd
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
</UL>

<P><STRONG><a name="[143]"></a>Update_patterns</STRONG> (Thumb, 476 bytes, Stack size 8 bytes, gdgui.o(i.Update_patterns))
<BR><BR>[Stack]<UL><LI>Max Depth = 948<LI>Call Chain = Update_patterns &rArr; Save_pic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_chdir
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[120]"></a>WIN_TCircle</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, gdgui.o(i.WIN_TCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WIN_TCircle &rArr; Win_HTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_HTLine
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_lock
</UL>

<P><STRONG><a name="[1d1]"></a>WaveParsing</STRONG> (Thumb, 336 bytes, Stack size 20 bytes, music.o(i.WaveParsing))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WaveParsing &rArr; ReadUnit
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUnit
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
</UL>

<P><STRONG><a name="[167]"></a>Wavplay</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, music.o(i.Wavplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = Wavplay &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Audio_MAL_Play
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_box
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaveParsing
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
</UL>

<P><STRONG><a name="[1c5]"></a>Win_Char</STRONG> (Thumb, 110 bytes, Stack size 36 bytes, gdgui.o(i.Win_Char))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Win_Char &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Num
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_time
</UL>

<P><STRONG><a name="[12a]"></a>Win_Fill</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, gdgui.o(i.Win_Fill))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Win_Fill &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_prg
</UL>

<P><STRONG><a name="[134]"></a>Win_Fonts</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gdgui.o(i.Win_Fonts))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Win_Fonts &rArr; SPI_Flash_Read &rArr; FlashPageRead &rArr; FlashWaitBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Read
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Hanzi
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Char
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_FontAdr
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_icon
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_file
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_list
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Info_board
</UL>

<P><STRONG><a name="[1d4]"></a>Win_Getpoint</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gdgui.o(i.Win_Getpoint))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
</UL>

<P><STRONG><a name="[128]"></a>Win_HTLine</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gdgui.o(i.Win_HTLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Win_HTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SFill
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIN_TCircle
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_prg
</UL>

<P><STRONG><a name="[1d3]"></a>Win_Hanzi</STRONG> (Thumb, 94 bytes, Stack size 52 bytes, gdgui.o(i.Win_Hanzi))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Win_Hanzi &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fonts
</UL>

<P><STRONG><a name="[183]"></a>Win_Num</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, gdgui.o(i.Win_Num))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Win_Num &rArr; Win_Char &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mypow
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Char
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_time
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_view
</UL>

<P><STRONG><a name="[180]"></a>Win_SFill</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, gdgui.o(i.Win_SFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Win_SFill &rArr; Win_HTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_HTLine
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
</UL>

<P><STRONG><a name="[15f]"></a>Win_SetPoint</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gdgui.o(i.Win_SetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Win_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Hanzi
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Char
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_type
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lock
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_icon
</UL>

<P><STRONG><a name="[11d]"></a>Win_TransPoint</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gdgui.o(i.Win_TransPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_SetPoint
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Getpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_VTLine
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_HTLine
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Fill
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_lock
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_prg
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_column
</UL>

<P><STRONG><a name="[129]"></a>Win_VTLine</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gdgui.o(i.Win_VTLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Win_VTLine &rArr; Win_TransPoint &rArr; Win_SetPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_TransPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_prg
</UL>

<P><STRONG><a name="[185]"></a>WriteBMPInfo</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, gdgui.o(i.WriteBMPInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = WriteBMPInfo &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
</UL>

<P><STRONG><a name="[184]"></a>WriteHeader</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gdgui.o(i.WriteHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = WriteHeader &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
</UL>

<P><STRONG><a name="[9d]"></a>Zoom_Mpic</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, album.o(i.Zoom_Mpic))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Zoom_Mpic &rArr; LCD_Fill &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Window
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cursor
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoomback
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecallUI
</UL>

<P><STRONG><a name="[9e]"></a>Zoomback</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, album.o(i.Zoomback))
<BR><BR>[Stack]<UL><LI>Max Depth = 988<LI>Call Chain = Zoomback &rArr; RecallUI &rArr; Set_Spic &rArr; Fill_Spic &rArr; f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zoom_Mpic
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecallUI
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[20e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[20f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[210]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f2]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[8c]"></a>delay_ms</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, delay.o(i.delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGif
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV7670_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game2
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Select_app
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_ctrl
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICO_Select
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Home_page
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dyna_bground
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_busy
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Del_Dialog
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_ball
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_hole
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Move_Spic
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_ctrl
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Musicplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mp3play
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_music
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FFT_init
</UL>

<P><STRONG><a name="[79]"></a>delay_us</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, delay.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADS_Read
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Write
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Stop
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCCB_Start
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_WriteReg
</UL>

<P><STRONG><a name="[1e9]"></a>disk_initialize</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = disk_initialize &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[201]"></a>disk_ioctl</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[1e6]"></a>disk_read</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disk_read &rArr; SD_ReadMultiBlocks &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[1e8]"></a>disk_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[1f7]"></a>disk_write</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WaitWriteOperation
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[cd]"></a>f_close</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_camera
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_ebook
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_prev
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Play_next
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_music
</UL>

<P><STRONG><a name="[cc]"></a>f_lseek</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_buf
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
</UL>

<P><STRONG><a name="[200]"></a>f_mount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.f_mount))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>f_open</STRONG> (Thumb, 312 bytes, Stack size 88 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = f_open &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
</UL>

<P><STRONG><a name="[8a]"></a>f_opendir</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_fmanager
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_album
</UL>

<P><STRONG><a name="[85]"></a>f_read</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_TransferComplete
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFont
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_pic
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_mono
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_bmp
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Spic
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_Mpic
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Lpic
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fill_paper
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wavplay
</UL>

<P><STRONG><a name="[135]"></a>f_readdir</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_search
</UL>

<P><STRONG><a name="[1f8]"></a>f_sync</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[ff]"></a>f_write</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Prt_Screen
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHeader
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBMPInfo
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Convert_pic
</UL>

<P><STRONG><a name="[13f]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_game1
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_camera
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_ebook
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Finish_music
</UL>

<P><STRONG><a name="[1eb]"></a>get_fat</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[1fb]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, diskio.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 156 bytes, Stack size 1136 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2268<LI>Call Chain = main &rArr; GDGUI_start &rArr; Home_page &rArr; Click_ico &rArr; Select_app &rArr; App_fmanager &rArr;  Home_page (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_Init
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGif
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Keyint
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Flash_Init
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyRTC_Init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_param
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COM1Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry8.o(.ARM.Collect$$$$00000009)
</UL>
<P><STRONG><a name="[a3]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDGUI_start
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_music
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_game1
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_ebook
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_camera
</UL>

<P><STRONG><a name="[1ff]"></a>mem_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mempool.o(i.mem_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15b]"></a>mypow</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.mypow))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Num
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Win_Num
</UL>

<P><STRONG><a name="[1ec]"></a>put_fat</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1c6]"></a>SetSysClock</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1ef]"></a>SysTick_Config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, delay.o(i.SysTick_Config))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>

<P><STRONG><a name="[f9]"></a>CmdResp1Error</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, sdio_sd.o(i.CmdResp1Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteMultiBlocks
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_WriteBlock
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_StopTransfer
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SendStatus
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_SelectDeselect
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadMultiBlocks
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ReadBlock
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_PowerON
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
</UL>

<P><STRONG><a name="[fd]"></a>CmdResp2Error</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sdio_sd.o(i.CmdResp2Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CmdResp2Error
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[fe]"></a>CmdResp6Error</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, sdio_sd.o(i.CmdResp6Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CmdResp6Error
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetCommandResponse
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_InitializeCards
</UL>

<P><STRONG><a name="[13a]"></a>FindSCR</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, sdio_sd.o(i.FindSCR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ReadData
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetFlagStatus
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_DataConfig
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_ClearFlag
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDEnWideBus
</UL>

<P><STRONG><a name="[19b]"></a>SDEnWideBus</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, sdio_sd.o(i.SDEnWideBus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_SendCommand
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDIO_GetResponse
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindSCR
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmdResp1Error
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_EnableWideBusOperation
</UL>

<P><STRONG><a name="[18b]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
</UL>

<P><STRONG><a name="[18f]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
</UL>

<P><STRONG><a name="[1e5]"></a>check_fs</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = check_fs &rArr; disk_read &rArr; SD_ReadMultiBlocks &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[1e7]"></a>chk_mounted</STRONG> (Thumb, 536 bytes, Stack size 32 bytes, ff.o(i.chk_mounted))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = chk_mounted &rArr; disk_initialize &rArr; SD_Init &rArr; SD_EnableWideBusOperation &rArr; SDEnWideBus &rArr; FindSCR &rArr; CmdResp1Error
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[1ea]"></a>create_chain</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[1ed]"></a>create_name</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = create_name
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[1f0]"></a>dir_next</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[1f3]"></a>dir_read</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[1f4]"></a>dir_register</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = dir_register &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[1f5]"></a>dir_sdi</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[1fa]"></a>follow_path</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = follow_path &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[1fd]"></a>get_fileinfo</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_fileinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[1f6]"></a>mem_cpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[1ee]"></a>mem_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ff.o(i.mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[1f1]"></a>move_window</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[1fc]"></a>remove_chain</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[1fe]"></a>sync</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, ff.o(i.sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = sync &rArr; move_window &rArr; disk_write &rArr; SD_WriteMultiBlocks &rArr; SD_LowLevel_DMA_TxConfig &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1f9]"></a>validate</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[1d5]"></a>_ClearUnusedPixels</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, gui_gif.o(i._ClearUnusedPixels))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ClearUnusedPixels &rArr; LCD_Fill &rArr; LCD_Cursor
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1d6]"></a>_DispGIFImage</STRONG> (Thumb, 402 bytes, Stack size 128 bytes, gui_gif.o(i._DispGIFImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DispGIFImage &rArr; _GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Line
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitLZW
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextByte
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1c3]"></a>_DrawGIFImage</STRONG> (Thumb, 258 bytes, Stack size 96 bytes, gui_gif.o(i._DrawGIFImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _DrawGIFImage &rArr; _DispGIFImage &rArr; _GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU16
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitGIFDecoding
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGlobalColorTable
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearUnusedPixels
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGif
</UL>

<P><STRONG><a name="[1df]"></a>_GetDataBlock</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_gif.o(i._GetDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextCode
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1c1]"></a>_GetGIFInfo</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gui_gif.o(i._GetGIFInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetGIFInfo &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipBytes
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitGIFDecoding
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGlobalColorTable
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGif
</UL>

<P><STRONG><a name="[1dd]"></a>_GetGlobalColorTable</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, gui_gif.o(i._GetGlobalColorTable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetGlobalColorTable
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1dc]"></a>_GetImageDimension</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_gif.o(i._GetImageDimension))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetImageDimension &rArr; _ReadU16
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU16
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1c2]"></a>_GetImageInfo</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gui_gif.o(i._GetImageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _GetImageInfo &rArr; _ReadExtension &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SkipBytes
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU16
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitGIFDecoding
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGlobalColorTable
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGif
</UL>

<P><STRONG><a name="[1d9]"></a>_GetNextByte</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, gui_gif.o(i._GetNextByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _GetNextByte &rArr; _GetNextCode &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextCode
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
</UL>

<P><STRONG><a name="[1e3]"></a>_GetNextCode</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, gui_gif.o(i._GetNextCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetNextCode &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextByte
</UL>

<P><STRONG><a name="[1db]"></a>_InitGIFDecoding</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_gif.o(i._InitGIFDecoding))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _InitGIFDecoding &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1d8]"></a>_InitLZW</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui_gif.o(i._InitLZW))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _InitLZW
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
</UL>

<P><STRONG><a name="[1e1]"></a>_ReadBytes</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_gif.o(i._ReadBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitGIFDecoding
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>

<P><STRONG><a name="[1e0]"></a>_ReadExtension</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui_gif.o(i._ReadExtension))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ReadExtension &rArr; _GetDataBlock &rArr; _ReadBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1de]"></a>_ReadU16</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_gif.o(i._ReadU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ReadU16
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU8
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageDimension
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
</UL>

<P><STRONG><a name="[1d7]"></a>_ReadU8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_gif.o(i._ReadU8))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadU16
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadExtension
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGlobalColorTable
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDataBlock
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGIFImage
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispGIFImage
</UL>

<P><STRONG><a name="[1e2]"></a>_SkipBytes</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_gif.o(i._SkipBytes))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetImageInfo
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetGIFInfo
</UL>

<P><STRONG><a name="[70]"></a>arm_recip_q31</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, arm_sqrt_q31.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = arm_recip_q31
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arm_sqrt_q31
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
